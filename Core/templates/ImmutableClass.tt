<#@ template language="C#" inherits="TemplateUtils" #>
<#@ import namespace="org.pescuma.ModelSharp.Core.model" #>
<#@ parameter name="it" type="org.pescuma.ModelSharp.Core.model.TypeInfo" #>
<#@ parameter name="class" type="System.String" #>
//----------------------
// <auto-generated>
//     Automatically generated by Model#
// </auto-generated>
//----------------------
// DO NOT EDIT THIS FILE

using System.CodeDom.Compiler;
<# 	ForEach("CreateUsing", it.Using); #>

<# 	if (it.Package != null) { #>
namespace <#= it.Package #>
{

<# 	} #>
<# 	if (it.Documentation != null) { #>
	/// <summary>
	/// <#= it.Documentation #>
	/// </summary>
<# 	} #>
<# 	ForEach("Annotation", it.Annotations); #>
<# 	ForEach("Annotation", it.BaseOnlyAnnotations); #>
	[GeneratedCode("Model#", "<#= System.Reflection.Assembly.GetExecutingAssembly().GetName().Version #>")]
	public abstract class <#= it.ImplementationName #><# if(it.ExtendsOrImplements.Count > 0) { #> : <# ForEach(it.ExtendsOrImplements, separator:", "); #><# } #> 
	{
<# 	ForEach("ImmutableField", it.Properties); #>
		protected <#= it.ImplementationName #>(<# ForEach("Param", it.NonComputedProperties, separator: ", "); #>)
		{
<# 	ForEach("ImmutableParamToField", it.Properties); #>
		}

<# 	if (it.Cloneable) { #>
		protected <#= it.ImplementationName #>(<#= it.ImplementationName #> other)
<#		if (it.Extends != null) { #>
			: base(other)
<#		} #>
		{
<# 	ForEach("ImmutableOtherToField", it.Properties); #>
		}

<# 	} #>
<# 	ForEach("ImmutableProperty", it.Properties); #>
<#	Include("Clone", it); #>
<#	Include("Equals", it); #>
	}
<# if (it.Package != null) { #>

}
<# } #>