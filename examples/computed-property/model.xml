<model namespace="examples.computeProperty">
	<type name="MyClass">
		<property name="X" type="double" />
		<property name="Y" type="double" default="2" />
		<computed-property name="Length" type="double" formula="Math.Sqrt(X * X + Y * Y)" dependsOn="X,Y" />
		<computed-property name="Dummy" type="string" />
		<computed-property name="DummyCached" type="string" cached="true" />
		<computed-property name="SquaredLength" type="double" dependsOn="X,y,Children" />
		<computed-property name="SquaredLengthCached" type="double" dependsOn="X,y,Ps" cached="true" />
		<collection name="Children" type="MyClass" />
		<collection name="Ps" type="Point" />
    <property name="P" type="Point" />
		<computed-property name="CompSub" type="double" dependsOn="P.X,p.Y,Ps.Y" />
		<computed-property name="CompSubCached" type="double" dependsOn="P.X,p.Y,Ps.Y" cached="true" />
	</type>
	<type name="MyImmutableClass" immutable="true">
		<property name="X" type="double" />
		<property name="Y" type="double" default="2" />
		<computed-property name="Length" type="double" formula="Math.Sqrt(X * X + Y * Y)" dependsOn="X,Y" />
		<computed-property name="Dummy" type="string" getter="protected" />
		<computed-property name="SquaredLength" type="double" dependsOn="X,y,Children" />
		<computed-property name="SquaredLengthCached" type="double" dependsOn="X,y" cached="true" />
		<collection name="Children" type="MyClass" />
	</type>
	<type name="Point">
		<property name="X" type="double" />
		<property name="Y" type="double" default="2" />
	</type>
</model>