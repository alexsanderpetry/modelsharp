<#@ template language="C#" inherits="TemplateUtils" #>
<#@ import namespace="org.pescuma.ModelSharp.Core.model" #>
<#@ parameter name="it" type="org.pescuma.ModelSharp.Core.model.PropertyInfo" #>
<#	if (it.LazyInitializer != null) { #>
			if (other.<#= it.FieldName #> != null) 
			{
<#	} #>
<#	if (it is CollectionInfo) { 
		var col = (CollectionInfo) it; 
		var target = (col.ExposeAsReadOnly ? "this." + col.FieldName : col.Name);
		if (col.ExposeAsReadOnly && it.LazyInitializer != null) { #>
			if (this.<#= it.FieldName #> == null)
				<#= it.LazyInitializer.Name #>();
<#		} #>
			<#= target #>.Clear();
<#		Include("CopyList", col, "target", target); #>
<#	} else if (it.IsComponent) { #>
			<#= it.Name #>.CopyFrom(other.<#= it.Name #>);
<#	} else if (it.IsComputedAndCached) {
		var computed = (ComputedPropertyInfo) it; #>
			<#= computed.ValidFieldName #> = false;
<#	} else { #>
<#		Include("CopyProperty", it, "target", it.Name); #>
<#	} #>
<#	if (it.LazyInitializer != null) { #>
			}
			else
			{
<#		if (it.IsCollection) { #>
				if (this.<#= it.FieldName #> != null)
					<#= it.Name #>.Clear();
<#		} else if (it.IsComponent) { #>
				if (this.<#= it.FieldName #> != null)
					<#= it.Name #>.CopyFrom(new <#= it.TypeName #>());
<#		} #>
			}
<#	} #>