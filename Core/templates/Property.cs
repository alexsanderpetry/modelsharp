// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace org.pescuma.ModelSharp.Core.templates
{
    using org.pescuma.ModelSharp.Core.model;
    using System;
    
    
    #line 1 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class Property : TemplateUtils
    {
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
        public override string TransformText()
        {
            this.GenerationEnvironment = null;
            this.Write("\t\t#region Property ");
            
            #line 4 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 6 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.FieldAnnotations); 
            
            #line default
            #line hidden
            this.Write("\t\tprivate ");
            
            #line 7 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.ReadOnly) { 
            
            #line default
            #line hidden
            this.Write("readonly ");
            
            #line 7 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            
            #line 7 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.TypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 7 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n");
            
            #line 9 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.Annotations); 
            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 10 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.TypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 10 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{\r\n");
            
            #line 12 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.Getter != null) { 
            
            #line default
            #line hidden
            
            #line 13 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.PropGetAnnotations); 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 14 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.GetterVisibility != null) { 
            
            #line default
            #line hidden
            
            #line 14 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.GetterVisibility));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 14 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("get{ return ");
            
            #line 14 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Getter.Name));
            
            #line default
            #line hidden
            this.Write("(); }\r\n");
            
            #line 15 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 
} if (it.Setter != null) { 
            
            #line default
            #line hidden
            
            #line 17 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.PropSetAnnotations); 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 18 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.SetterVisibility != null) { 
            
            #line default
            #line hidden
            
            #line 18 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.SetterVisibility));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 18 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("set{ ");
            
            #line 18 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Setter.Name));
            
            #line default
            #line hidden
            this.Write("(value); }\r\n");
            
            #line 19 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n");
            
            #line 22 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.LazyInitializer != null) { 
            
            #line default
            #line hidden
            
            #line 23 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.LazyInitializer.Annotations); 
            
            #line default
            #line hidden
            this.Write("\t\tprotected virtual ");
            
            #line 24 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.LazyInitializer.TypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 24 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.LazyInitializer.Name));
            
            #line default
            #line hidden
            this.Write("() \r\n\t\t{\r\n\t\t\tif (");
            
            #line 26 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n\t\t\t\treturn;\r\n\r\n");
            
            #line 29 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		if (it.DefaultValue != null) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 30 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 30 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefaultValue));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 31 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 32 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 32 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.TypeName));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 33 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		} 
            
            #line default
            #line hidden
            
            #line 34 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		if (it.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tAdd");
            
            #line 35 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("Listeners(");
            
            #line 35 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 36 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		} 
            
            #line default
            #line hidden
            
            #line 37 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		if (it.IsCollection) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tAdd");
            
            #line 38 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ListListeners(");
            
            #line 38 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 39 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
		} 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n");
            
            #line 42 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            
            #line 43 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.Getter != null) { 
            
            #line default
            #line hidden
            
            #line 44 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.Getter.Annotations); 
            
            #line default
            #line hidden
            this.Write("\t\tprotected virtual ");
            
            #line 45 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Getter.TypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 45 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Getter.Name));
            
            #line default
            #line hidden
            this.Write("()\r\n\t\t{\r\n");
            
            #line 47 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.LazyInitializer != null) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 48 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.LazyInitializer.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 49 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\treturn ");
            
            #line 50 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t}\r\n\r\n");
            
            #line 53 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            
            #line 54 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.Setter != null) { 
            
            #line default
            #line hidden
            
            #line 55 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 ForEach("Annotation", it.Setter.Annotations); 
            
            #line default
            #line hidden
            this.Write("\t\tprotected virtual ");
            
            #line 56 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Setter.TypeName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 56 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Setter.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 56 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Setter.Parameters[0]));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 56 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(") \r\n\t\t{\r\n");
            
            #line 58 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.AssertNotNull) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tif (");
            
            #line 59 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n\t\t\t\tthrow new ArgumentException(\"");
            
            #line 60 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write(" can\'t be null\");\r\n");
            
            #line 61 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\tif (");
            
            #line 62 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(" == ");
            
            #line 62 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tNotifyPropertyChanging(PROPERTIES.");
            
            #line 65 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 67 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tRemove");
            
            #line 68 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("Listeners(");
            
            #line 68 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 70 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 71 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.FieldName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 71 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n");
            
            #line 73 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tAdd");
            
            #line 74 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("Listeners(");
            
            #line 74 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.VarName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 76 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\tNotifyPropertyChanged(PROPERTIES.");
            
            #line 77 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n");
            
            #line 82 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\tprivate void Remove");
            
            #line 83 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("Listeners(object child)\r\n\t\t{\r\n\t\t\tif (child == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar notify" +
                    "PropertyChanging = child as INotifyPropertyChanging;\r\n\t\t\tif (notifyPropertyChang" +
                    "ing != null)\r\n\t\t\t\tnotifyPropertyChanging.PropertyChanging -= ");
            
            #line 90 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanging = child as IN" +
                    "otifyChildPropertyChanging;\r\n\t\t\tif (notifyChildPropertyChanging != null)\r\n\t\t\t\tno" +
                    "tifyChildPropertyChanging.ChildPropertyChanging -= ");
            
            #line 94 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyPropertyChanged = child as INo" +
                    "tifyPropertyChanged;\r\n\t\t\tif (notifyPropertyChanged != null)\r\n\t\t\t\tnotifyPropertyC" +
                    "hanged.PropertyChanged -= ");
            
            #line 98 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangedEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanged = child as INot" +
                    "ifyChildPropertyChanged;\r\n\t\t\tif (notifyChildPropertyChanged != null)\r\n\t\t\t\tnotify" +
                    "ChildPropertyChanged.ChildPropertyChanged -= ");
            
            #line 102 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangedEventHandler;\r\n\t\t}\r\n\r\n");
            
            #line 105 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } // if (it.CanListenTo) 
            
            #line default
            #line hidden
            
            #line 106 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } // if (it.Setter) 
            
            #line default
            #line hidden
            
            #line 107 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\tprivate void Add");
            
            #line 108 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("Listeners(object child)\r\n\t\t{\r\n\t\t\tif (child == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar notify" +
                    "PropertyChanging = child as INotifyPropertyChanging;\r\n\t\t\tif (notifyPropertyChang" +
                    "ing != null)\r\n\t\t\t\tnotifyPropertyChanging.PropertyChanging += ");
            
            #line 115 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanging = child as IN" +
                    "otifyChildPropertyChanging;\r\n\t\t\tif (notifyChildPropertyChanging != null)\r\n\t\t\t\tno" +
                    "tifyChildPropertyChanging.ChildPropertyChanging += ");
            
            #line 119 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyPropertyChanged = child as INo" +
                    "tifyPropertyChanged;\r\n\t\t\tif (notifyPropertyChanged != null)\r\n\t\t\t\tnotifyPropertyC" +
                    "hanged.PropertyChanged += ");
            
            #line 123 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangedEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanged = child as INot" +
                    "ifyChildPropertyChanged;\r\n\t\t\tif (notifyChildPropertyChanged != null)\r\n\t\t\t\tnotify" +
                    "ChildPropertyChanged.ChildPropertyChanged += ");
            
            #line 127 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangedEventHandler;\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 130 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangingEventHandler(object sender, PropertyChangingEventArgs e)\r\n\t\t{\r\n\t\t" +
                    "\tNotifyChildPropertyChanging(PROPERTIES.");
            
            #line 132 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 135 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangingEventHandler(object sender, ChildPropertyChangingEventArgs e" +
                    ")\r\n\t\t{\r\n\t\t\tNotifyChildPropertyChanging(PROPERTIES.");
            
            #line 137 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 140 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("PropertyChangedEventHandler(object sender, PropertyChangedEventArgs e)\r\n\t\t{\r\n\t\t\tN" +
                    "otifyChildPropertyChanged(PROPERTIES.");
            
            #line 142 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 145 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("ChildPropertyChangedEventHandler(object sender, ChildPropertyChangedEventArgs e)\r" +
                    "\n\t\t{\r\n\t\t\tNotifyChildPropertyChanged(PROPERTIES.");
            
            #line 147 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n");
            
            #line 150 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } // if (it.CanListenTo) 
            
            #line default
            #line hidden
            
            #line 151 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (it.IsCollection) { 
	var col = (CollectionInfo) it;
	
            
            #line default
            #line hidden
            this.Write("\t\tprivate void Add");
            
            #line 154 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListListeners(object child)\r\n\t\t{\r\n\t\t\tif (child == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar no" +
                    "tifyPropertyChanging = child as INotifyPropertyChanging;\r\n\t\t\tif (notifyPropertyC" +
                    "hanging != null)\r\n\t\t\t\tnotifyPropertyChanging.PropertyChanging += ");
            
            #line 161 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyPropertyChanged = child as INot" +
                    "ifyPropertyChanged;\r\n\t\t\tif (notifyPropertyChanged != null)\r\n\t\t\t\tnotifyPropertyCh" +
                    "anged.PropertyChanged += ");
            
            #line 165 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListPropertyChangedEventHandler;\r\n");
            
            #line 166 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (col.ContentsType.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tvar notifyChildPropertyChanged = child as INotifyCollectionChanged;\r\n\t\t\tif (" +
                    "notifyChildPropertyChanged != null)\r\n\t\t\t\tnotifyChildPropertyChanged.CollectionCh" +
                    "anged += ");
            
            #line 170 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListChangedEventHandler;\r\n");
            
            #line 171 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 174 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListPropertyChangingEventHandler(object sender, PropertyChangingEventArgs e)\r\n\t\t{" +
                    "\r\n\t\t\tif (e.PropertyName != ");
            
            #line 176 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.TypeName));
            
            #line default
            #line hidden
            this.Write(".PROPERTIES.ITEMS)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tNotifyPropertyChanging(PROPERTIES.");
            
            #line 179 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 182 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ListPropertyChangedEventHandler(object sender, PropertyChangedEventArgs e)\r\n\t\t{\r\n" +
                    "\t\t\tif (e.PropertyName != ");
            
            #line 184 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.TypeName));
            
            #line default
            #line hidden
            this.Write(".PROPERTIES.ITEMS)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tNotifyPropertyChanged(PROPERTIES.");
            
            #line 187 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t}\r\n\r\n");
            
            #line 190 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 if (col.ContentsType.CanListenTo) { 
            
            #line default
            #line hidden
            this.Write("\t\tprivate void ");
            
            #line 191 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write(@"ListChangedEventHandler(object sender, NotifyCollectionChangedEventArgs e)
		{
			switch (e.Action)
			{
				case NotifyCollectionChangedAction.Add:
				case NotifyCollectionChangedAction.Remove:
				case NotifyCollectionChangedAction.Replace:
					
					if ((e.OldItems == null || e.OldItems.Count == 0) 
							&& (e.NewItems == null || e.NewItems.Count == 0))
						throw new InvalidOperationException();

					if (e.OldItems != null)
						foreach (var item in e.OldItems)
							Remove");
            
            #line 205 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemListeners(item);\r\n\r\n\t\t\t\t\tif (e.NewItems != null)\r\n\t\t\t\t\t\tforeach (var item in " +
                    "e.NewItems)\r\n\t\t\t\t\t\t\tAdd");
            
            #line 209 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write(@"ItemListeners(item);

					break;
				case NotifyCollectionChangedAction.Move:
					// Do nothing
					break;
				default:
					// NotifyCollectionChangedAction.Reset: The list should not fire this or 
					// we can't control the items
					throw new InvalidOperationException();
			}
		}

		private void Remove");
            
            #line 222 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemListeners(object child)\r\n\t\t{\r\n\t\t\tif (child == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar no" +
                    "tifyPropertyChanging = child as INotifyPropertyChanging;\r\n\t\t\tif (notifyPropertyC" +
                    "hanging != null)\r\n\t\t\t\tnotifyPropertyChanging.PropertyChanging -= ");
            
            #line 229 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanging = child a" +
                    "s INotifyChildPropertyChanging;\r\n\t\t\tif (notifyChildPropertyChanging != null)\r\n\t\t" +
                    "\t\tnotifyChildPropertyChanging.ChildPropertyChanging -= ");
            
            #line 233 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyPropertyChanged = child as" +
                    " INotifyPropertyChanged;\r\n\t\t\tif (notifyPropertyChanged != null)\r\n\t\t\t\tnotifyPrope" +
                    "rtyChanged.PropertyChanged -= ");
            
            #line 237 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangedEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanged = child as " +
                    "INotifyChildPropertyChanged;\r\n\t\t\tif (notifyChildPropertyChanged != null)\r\n\t\t\t\tno" +
                    "tifyChildPropertyChanged.ChildPropertyChanged -= ");
            
            #line 241 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangedEventHandler;\r\n\t\t}\r\n\r\n\t\tprivate void Add");
            
            #line 244 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemListeners(object child)\r\n\t\t{\r\n\t\t\tif (child == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar no" +
                    "tifyPropertyChanging = child as INotifyPropertyChanging;\r\n\t\t\tif (notifyPropertyC" +
                    "hanging != null)\r\n\t\t\t\tnotifyPropertyChanging.PropertyChanging += ");
            
            #line 251 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanging = child a" +
                    "s INotifyChildPropertyChanging;\r\n\t\t\tif (notifyChildPropertyChanging != null)\r\n\t\t" +
                    "\t\tnotifyChildPropertyChanging.ChildPropertyChanging += ");
            
            #line 255 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangingEventHandler;\r\n\r\n\t\t\tvar notifyPropertyChanged = child as" +
                    " INotifyPropertyChanged;\r\n\t\t\tif (notifyPropertyChanged != null)\r\n\t\t\t\tnotifyPrope" +
                    "rtyChanged.PropertyChanged += ");
            
            #line 259 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangedEventHandler;\r\n\r\n\t\t\tvar notifyChildPropertyChanged = child as " +
                    "INotifyChildPropertyChanged;\r\n\t\t\tif (notifyChildPropertyChanged != null)\r\n\t\t\t\tno" +
                    "tifyChildPropertyChanged.ChildPropertyChanged += ");
            
            #line 263 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangedEventHandler;\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 266 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangingEventHandler(object sender, PropertyChangingEventArgs e)\r\n\t\t{" +
                    "\r\n\t\t\tNotifyChildPropertyChanging(PROPERTIES.");
            
            #line 268 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 271 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangingEventHandler(object sender, ChildPropertyChangingEventAr" +
                    "gs e)\r\n\t\t{\r\n\t\t\tNotifyChildPropertyChanging(PROPERTIES.");
            
            #line 273 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 276 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemPropertyChangedEventHandler(object sender, PropertyChangedEventArgs e)\r\n\t\t{\r\n" +
                    "\t\t\tNotifyChildPropertyChanged(PROPERTIES.");
            
            #line 278 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n\t\tprivate void ");
            
            #line 281 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.Name));
            
            #line default
            #line hidden
            this.Write("ItemChildPropertyChangedEventHandler(object sender, ChildPropertyChangedEventArgs" +
                    " e)\r\n\t\t{\r\n\t\t\tNotifyChildPropertyChanged(PROPERTIES.");
            
            #line 283 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(col.DefineName));
            
            #line default
            #line hidden
            this.Write(", sender, e);\r\n\t\t}\r\n\r\n");
            
            #line 286 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            
            #line 287 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion Property ");
            
            #line 288 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(it.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Desenvolvimento\c#\ModelSharp\Core\templates\Property.tt"

private global::org.pescuma.ModelSharp.Core.model.PropertyInfo _itField;

/// <summary>
/// Access the it parameter of the template.
/// </summary>
private global::org.pescuma.ModelSharp.Core.model.PropertyInfo it
{
    get
    {
        return this._itField;
    }
}


public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool itValueAcquired = false;
if (this.Session.ContainsKey("it"))
{
    if ((typeof(global::org.pescuma.ModelSharp.Core.model.PropertyInfo).IsAssignableFrom(this.Session["it"].GetType()) == false))
    {
        this.Error("The type \'org.pescuma.ModelSharp.Core.model.PropertyInfo\' of the parameter \'it\' d" +
                "id not match the type of the data passed to the template.");
    }
    else
    {
        this._itField = ((global::org.pescuma.ModelSharp.Core.model.PropertyInfo)(this.Session["it"]));
        itValueAcquired = true;
    }
}
if ((itValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("it");
    if ((data != null))
    {
        if ((typeof(global::org.pescuma.ModelSharp.Core.model.PropertyInfo).IsAssignableFrom(data.GetType()) == false))
        {
            this.Error("The type \'org.pescuma.ModelSharp.Core.model.PropertyInfo\' of the parameter \'it\' d" +
                    "id not match the type of the data passed to the template.");
        }
        else
        {
            this._itField = ((global::org.pescuma.ModelSharp.Core.model.PropertyInfo)(data));
        }
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
