<#@ template language="C#" inherits="TemplateUtils" #>
<#@ import namespace="org.pescuma.ModelSharp.Core.model" #>
<#@ parameter name="it" type="org.pescuma.ModelSharp.Core.model.PropertyInfo" #>
<# if (it.LazyInitializer != null) { #>
			if (other.<#= it.FieldName #> != null) 
			{
<# } #>
<# if (it is CollectionInfo) { 
	var col = (CollectionInfo) it; #>
			<#= col.FieldName #> = new <#= col.TypeName #>();
			Add<#= it.Name #>ListListeners(<#= it.FieldName #>);
<#		if (!col.DeepCopy) { #>
			<#= col.FieldName #>.AddRange(other.<#= col.Name #>);
<#		} else if (col.ContentsType.HasCopyConstructor) { #>
			foreach (<#= col.Contents #> otherItem in other.<#= col.Name #>)
				<#= col.FieldName #>.Add(new <#= col.Contents #>(otherItem));
<#		} else if (col.ContentsType.CreateExternalCopyMethod("otherItem") != null) { #>
			foreach (<#= col.Contents #> otherItem in other.<#= col.Name #>)
				<#= col.FieldName #>.Add(<#= col.ContentsType.CreateExternalCopyMethod("otherItem") #>);
<#		} else  { #>
			???;
<#		} #>
<# } else if (it is ComponentInfo)  { #>
<#		if (it.HasCopyConstructor) { #>
			<#= it.FieldName #> = new <#= it.TypeName #>(other.<#= it.Name #>);
<#		} else if (it.CreateExternalCopyMethod("other." + it.Name) != null) { #>
			<#= it.FieldName #> = <#= it.CreateExternalCopyMethod("other." + it.Name) #>;
<#		} else  { #>
			???;
<#		} #>
<# } else if (it.IsComputedAndCached) {
	var computed = (ComputedPropertyInfo) it; #>
			<#= computed.ValidFieldName #> = false;
<# } else if (!it.IsComputed) { #>
<#		if (!it.DeepCopy) { #>
			<#= it.FieldName #> = other.<#= it.Name #>;
<#		} else if (it.HasCopyConstructor) { #>
			<#= it.FieldName #> = new <#= it.TypeName #>(other.<#= it.Name #>);
<#		} else if (it.CreateExternalCopyMethod("other." + it.Name) != null) { #>
			<#= it.FieldName #> = <#= it.CreateExternalCopyMethod("other." + it.Name) #>;
<#		} else  { #>
			???;
<#		} #>
<# } #><# if (it.CanListenTo) { #>
			Add<#= it.Name #>Listeners(<#= it.FieldName #>);
<# } #>
<# if (it.LazyInitializer != null) { #>
			}
<# } #>