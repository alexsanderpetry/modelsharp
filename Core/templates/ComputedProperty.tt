<#@ template language="C#" inherits="TemplateUtils" #>
<#@ import namespace="org.pescuma.ModelSharp.Core.model" #>
<#@ parameter name="it" type="org.pescuma.ModelSharp.Core.model.PropertyInfo" #>
<# var computed = (ComputedPropertyInfo) it; #>
<# if (computed.Cached) { #>
<# ForEach("Annotation", computed.FieldAnnotations); #>
		private <#= computed.TypeName #> <#= computed.FieldName #>;
<# ForEach("Annotation", computed.InvalidFieldAnnotations); #>
		private bool <#= computed.ValidFieldName #>;

<# } #>
<# if (it.Documentation != null) { #>
		/// <summary>
		/// <#= it.Documentation #>
		/// </summary>
<# } #>
<# ForEach("Annotation", it.Annotations); #>
		public <#= it.TypeName #> <#= it.Name #> 
		{
<# ForEach("Annotation", it.PropGetAnnotations); #>
			<# if (it.GetterVisibility != null) { #><#= it.GetterVisibility #> <# } #>get{ return <#= computed.Cacher.Name #>(); }
		}
<# if (computed.Cached) { #>
		
<# ForEach("Annotation", computed.Invalidate.Annotations); #>
		protected virtual <#= computed.Invalidate.TypeName #> <#= computed.Invalidate.Name #>()
		{
			<#= computed.ValidFieldName #> = false;
		}

<# ForEach("Annotation", computed.Cacher.Annotations); #>
		private <#= computed.Cacher.TypeName #> <#= computed.Cacher.Name #>()
		{
			if (!<#= computed.ValidFieldName #>)
			{
				this.<#= computed.FieldName #> = <#= computed.Getter.Name #>();
				this.<#= computed.ValidFieldName #> = true;
			}

			return this.<#= it.FieldName #>;
		}
<# } #>
<# if (computed.Formula != null) { #>
		
<# ForEach("Annotation", it.Getter.Annotations); #>
		protected virtual <#= it.Getter.TypeName #> <#= it.Getter.Name #>()
		{
			return <#= computed.Formula #>;
		}
<# } else { #>
		
<# ForEach("Annotation", it.Getter.Annotations); #>
		protected abstract <#= it.Getter.TypeName #> <#= it.Getter.Name #>();
<# } #>